org: rcgiraldo
service: backend-node-aws

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    FILMS_TABLE_NAME: Films
    CUSTOM_DATA_TABLE_NAME: CustomData
    SWAPI_BASE_URL: https://swapi.dev/api
    TMDB_BASE_URL: https://api.themoviedb.org/3
    TMDB_API_KEY: ${env:TMDB_API_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:us-east-1:752337386026:table/Films
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:us-east-1:752337386026:table/CustomData
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:us-east-1:752337386026:table/Cache

plugins:
  - serverless-openapi-documenter

resources:
  Resources:
    FilmsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Films
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        GlobalSecondaryIndexes:
          - IndexName: CreatedAtIndex
            KeySchema:
              - AttributeName: createdAt
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5

    CustomDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CustomData
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    LogsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Logs
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    CacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Cache
        AttributeDefinitions:
          - AttributeName: cacheKey
            AttributeType: S
        KeySchema:
          - AttributeName: cacheKey
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  getMergedFilms:
    handler: src/application/handlers/filmHandler.getMergedFilmsByTitleHandler
    events:
      - httpApi:
          path: /fusionados
          method: get

  getAllMergedFilms:
    handler: src/application/handlers/filmHandler.getMergedFilmsHandler
    events:
      - httpApi:
          path: /fusionados-todos
          method: get

  saveCustomData:
    handler: src/application/handlers/customDataHandler.saveCustomDataHandler
    events:
      - httpApi:
          path: /almacenar
          method: post

  getPaginatedFilms:
    handler: src/application/handlers/filmHandler.getPaginatedFilmsHandler
    events:
      - httpApi:
          path: /historial
          method: get

custom:
  documentation:
    models:
      - name: GreetingResponse
        description: "Response model for greeting"
        contentType: "application/json"
        schema:
          type: object
          properties:
            message:
              type: string
              description: "A greeting message"

      - name: MergedFilmsResponse
        description: "Response model for merged films"
        contentType: "application/json"
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier for the film"
                  titulo:
                    type: string
                    description: "Title of the film"
                  episodio_id:
                    type: integer
                    description: "Episode ID of the film"
                  apertura:
                    type: string
                    description: "Opening crawl text of the film"
                  director:
                    type: string
                    description: "Director of the film"
                  productor:
                    type: string
                    description: "Producer of the film"
                  fecha_estreno:
                    type: string
                    format: date
                    description: "Release date of the film"
                  personajes:
                    type: array
                    items:
                      type: string
                    description: "Characters in the film"
                  planetas:
                    type: array
                    items:
                      type: string
                    description: "Planets in the film"
                  naves_estelares:
                    type: array
                    items:
                      type: string
                    description: "Starships in the film"
                  vehiculos:
                    type: array
                    items:
                      type: string
                    description: "Vehicles in the film"
                  especies:
                    type: array
                    items:
                      type: string
                    description: "Species in the film"
                  popularidad:
                    type: number
                    description: "Popularity of the film"
                  calificacion_promedio:
                    type: number
                    format: float
                    description: "Average rating of the film"
                  cantidad_votos:
                    type: integer
                    description: "Number of votes for the film"
                  presupuesto:
                    type: number
                    description: "Budget of the film"
                  ingresos:
                    type: number
                    description: "Revenue of the film"
                  createdAt:
                    type: string
                    format: date-time
                    description: "Creation date of the record"

      - name: SaveCustomDataResponse
        description: "Response model for saving custom data"
        contentType: "application/json"
        schema:
          type: object
          properties:
            message:
              type: string
              description: "Message indicating the custom data was saved successfully"

      - name: PaginatedFilmsResponse
        description: "Response model for paginated films"
        contentType: "application/json"
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier for the film"
                  titulo:
                    type: string
                    description: "Title of the film"
                  episodio_id:
                    type: integer
                    description: "Episode ID of the film"
                  apertura:
                    type: string
                    description: "Opening crawl text of the film"
                  director:
                    type: string
                    description: "Director of the film"
                  productor:
                    type: string
                    description: "Producer of the film"
                  fecha_estreno:
                    type: string
                    format: date
                    description: "Release date of the film"
                  personajes:
                    type: array
                    items:
                      type: string
                    description: "Characters in the film"
                  planetas:
                    type: array
                    items:
                      type: string
                    description: "Planets in the film"
                  naves_estelares:
                    type: array
                    items:
                      type: string
                    description: "Starships in the film"
                  vehiculos:
                    type: array
                    items:
                      type: string
                    description: "Vehicles in the film"
                  especies:
                    type: array
                    items:
                      type: string
                    description: "Species in the film"
                  popularidad:
                    type: number
                    description: "Popularity of the film"
                  calificacion_promedio:
                    type: number
                    format: float
                    description: "Average rating of the film"
                  cantidad_votos:
                    type: integer
                    description: "Number of votes for the film"
                  presupuesto:
                    type: number
                    description: "Budget of the film"
                  ingresos:
                    type: number
                    description: "Revenue of the film"
                  createdAt:
                    type: string
                    format: date-time
                    description: "Creation date of the record"
            lastKey:
              type: object
              properties:
                id:
                  type: string
                  description: "Unique identifier for the film"
                createdAt:
                  type: string
                  format: date-time
                  description: "Creation date of the record"

      - name: CustomDataRequest
        description: "Request model for saving custom data"
        contentType: "application/json"
        schema:
          type: object
          properties:
            id:
              type: string
              description: "Unique identifier for the custom data"
            data:
              type: object
              additionalProperties: true
              description: "The custom data content"
